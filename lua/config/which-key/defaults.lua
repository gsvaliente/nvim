return {
  mode = { "n", "v" },
  o = { require("telescope.builtin").buffers, "Open Buffer" },
  W = { "<cmd>noautocmd w<cr>", "Save without formatting (noautocmd)" },
  u = {
    name = "UI",
    v = { require("config.utils").toggle_set_color_column, "Toggle Color Line" },
    c = { require("config.utils").toggle_cursor_line, "Toggle Cursor Line" },
  },
  r = {
    name = "Replace (Spectre)",
    r = { "<cmd>lua require('spectre').open()<cr>", "Replace" },
    w = { "<cmd>lua require('spectre').open_visual({select_word=true})<cr>", "Replace Word" },
    f = { "<cmd>lua require('spectre').open_file_search()<cr>", "Replace Buffer" },
  },
  m = {
    name = "Markdown",
    t = { "<cmd>MarkdownPreviewToggle<cr>", "Toggle Preview" },
    p = { "<cmd>MarkdownPreview<cr>", "Preview" },
    s = { "<cmd>MarkdownPreviewStop<cr>", "Stop Preview" },
  },
  f = {
    name = "+Search",
    f = { "<cmd>Telescope find_files<cr>", "Find File (CWD)" },
    h = { "<cmd>Telescope help_tags<cr>", "Find Help" },
    H = { "<cmd>Telescope highlights<cr>", "Find highlight groups" },
    M = { "<cmd>Telescope man_pages<cr>", "Man Pages" },
    o = { "<cmd>Telescope oldfiles<cr>", "Open Recent File" },
    R = { "<cmd>Telescope registers<cr>", "Registers" },
    t = { "<cmd>Telescope live_grep<cr>", "Live Grep" },
    T = { "<cmd>Telescope grep_string<cr>", "Grep String" },
    k = { "<cmd>Telescope keymaps<cr>", "Keymaps" },
    C = { "<cmd>Telescope commands<cr>", "Commands" },
    l = { "<cmd>Telescope resume<cr>", "Resume last search" },
    c = { "<cmd>Telescope git_commits<cr>", "Git commits" },
    B = { "<cmd>Telescope git_branches<cr>", "Git branches" },
    m = { "<cmd>Telescope git_status<cr>", "Git status" },
    S = { "<cmd>Telescope git_stash<cr>", "Git stash" },
    e = { "<cmd>Telescope frecency<cr>", "Frecency" },
    b = { "<cmd>Telescope buffers<cr>", "Buffers" },
  },
  l = {
    name = "+LSP",
    a = { vim.lsp.buf.code_action, "Code Action" },
    A = { vim.lsp.buf.range_code_action, "Range Code Actions" },
    s = { vim.lsp.buf.signature_help, "Display Signature Information" },
    r = { vim.lsp.buf.rename, "Rename all references" },
    f = { vim.lsp.buf.format, "Format" },
    i = { require("telescope.builtin").lsp_implementations, "Implementation" },
    l = { "<cmd>TroubleToggle document_diagnostics<cr>", "Document Diagnostics (Trouble)" },
    L = { "<cmd>TroubleToggle workspace_diagnostics<cr>", "Workspace Diagnostics (Trouble)" },
    w = { require("telescope.builtin").diagnostics, "Diagnostics" },
    --    t = { require("telescope").extensions.refactoring.refactors, "Refactor" },
    c = { require("config.utils").copyFilePathAndLineNumber, "Copy File Path and Line Number" },
  },
  g = {
    name = "+Git",
    g = { "<cmd>Neogit<cr>", "Neogit" },
    b = { "<cmd>Telescope git_branches<cr>", "Branches" },
    c = { "<cmd>Telescope git_commits<cr>", "Commits" },
    d = { "<cmd>DiffviewOpen<cr>", "Open Diff" },
    x = { "<cmd>DiffviewClose<cr>", "Close Diff" },
  },
}
